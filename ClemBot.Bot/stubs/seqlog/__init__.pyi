from _typeshed import Incomplete
from seqlog.structured_logging import ConsoleStructuredLogHandler as ConsoleStructuredLogHandler, SeqLogHandler as SeqLogHandler, StructuredLogger as StructuredLogger, StructuredRootLogger as StructuredRootLogger, set_callback_on_failure as set_callback_on_failure

def configure_from_file(file_name, override_root_logger: bool = ..., use_structured_logger: bool = ...) -> None: ...
def configure_from_dict(config, override_root_logger: bool = ..., use_structured_logger: bool = ...) -> None: ...
def log_to_seq(server_url, api_key: Incomplete | None = ..., level=..., batch_size: int = ..., auto_flush_timeout: Incomplete | None = ..., additional_handlers: Incomplete | None = ..., override_root_logger: bool = ..., json_encoder_class: Incomplete | None = ..., **kwargs): ...
def log_to_console(level=..., override_root_logger: bool = ..., **kwargs) -> None: ...
def get_global_log_properties(): ...
def set_global_log_properties(**properties) -> None: ...
def reset_global_log_properties() -> None: ...
def clear_global_log_properties() -> None: ...
