from _typeshed import Incomplete

DEFAULT_LOGGING_CONFIG_PORT: int
RESET_ERROR: Incomplete

def fileConfig(fname, defaults: Incomplete | None = ..., disable_existing_loggers: bool = ..., encoding: Incomplete | None = ...) -> None: ...

IDENTIFIER: Incomplete

def valid_ident(s): ...

class ConvertingMixin:
    def convert_with_key(self, key, value, replace: bool = ...): ...
    def convert(self, value): ...

class ConvertingDict(dict, ConvertingMixin):
    def __getitem__(self, key): ...
    def get(self, key, default: Incomplete | None = ...): ...
    def pop(self, key, default: Incomplete | None = ...): ...

class ConvertingList(list, ConvertingMixin):
    def __getitem__(self, key): ...
    def pop(self, idx: int = ...): ...

class ConvertingTuple(tuple, ConvertingMixin):
    def __getitem__(self, key): ...

class BaseConfigurator:
    CONVERT_PATTERN: Incomplete
    WORD_PATTERN: Incomplete
    DOT_PATTERN: Incomplete
    INDEX_PATTERN: Incomplete
    DIGIT_PATTERN: Incomplete
    value_converters: Incomplete
    importer: Incomplete
    config: Incomplete
    def __init__(self, config) -> None: ...
    def resolve(self, s): ...
    def ext_convert(self, value): ...
    def cfg_convert(self, value): ...
    def convert(self, value): ...
    def configure_custom(self, config): ...
    def as_tuple(self, value): ...

class DictConfigurator(BaseConfigurator):
    def configure(self) -> None: ...
    def configure_formatter(self, config): ...
    def configure_filter(self, config): ...
    def add_filters(self, filterer, filters) -> None: ...
    def configure_handler(self, config): ...
    def add_handlers(self, logger, handlers) -> None: ...
    def common_logger_config(self, logger, config, incremental: bool = ...) -> None: ...
    def configure_logger(self, name, config, incremental: bool = ...) -> None: ...
    def configure_root(self, config, incremental: bool = ...) -> None: ...
dictConfigClass = DictConfigurator

def dictConfig(config) -> None: ...
def listen(port=..., verify: Incomplete | None = ...): ...
def stopListening() -> None: ...
